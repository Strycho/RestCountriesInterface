// Define variables
$primary-color: #646cff;
$secondary-color: #535bf2;
$dark-mode-color: #333;
$light-mode-color: #fff;

// Define mixins
@mixin transition($property, $duration, $timing-function) {
  transition: $property $duration $timing-function;
}

// Typography
:root {
  font-family: Inter, system-ui, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;

  color-scheme: light dark;
  color: rgba(255, 255, 255, 0.87);
  background-color: #242424;

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

a {
  font-weight: 500;
  color: $primary-color;
  text-decoration: inherit;
}
a:hover {
  color: $secondary-color;
}

body {
  margin: 0;
  display:block;
  place-items: center;
  min-width: 320px;
  min-height: 100vh;
  top: 0px;
  position: absolute;
  width: 100%;
}

h1 {
  text-align: center;
  font-size: 3.2em;
  line-height: 1.1;
}

button {
  border-radius: 8px;
  border: 1px solid transparent;
  padding: 0.6em 1.2em;
  font-size: 1em;
  font-weight: 500;
  font-family: inherit;
  background-color: #1a1a1a;
  cursor: pointer;
  transition: border-color 0.25s;
}
button:hover {
  border-color: $primary-color;
}
button:focus,
button:focus-visible {
  outline: 4px auto -webkit-focus-ring-color;
}

.background{
  width: 100%;
  height: 100%;
}
// dark mode for .background
.background.dark-mode {
  background-color: #333;
  color: #fff;
}

// flag image grid to display the flags in a grid layout allowing multiple flags to be displayed in a row
.flag-image-grid {
  display: grid;
  width: 100%;
  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
  gap: 1em;
  padding: 1em;
}
// flag image to display the flag image in a card layout
.flag-image-grid-item {
  display: block;
  width: 100%;
  border-radius: 8px;
  overflow: hidden;
  width: 200px;
  height: 100px;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
}

.flag-image-grid-item img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}
// Modals
.modal {
  position: fixed;
  z-index: 1;
  left: 10%;
  top: 10%;
  width: 80%;
  height: 80%;
  border: solid 1px #000;
  border-radius: 8px;
  color: #000;
  overflow: auto;
  background-color: rgba(201, 200, 200, 0.9);
  visibility: hidden;
  opacity: 0;
  transition: visibility 0s linear 0.25s, opacity 0.25s 0s;
  animation-name: modalOpen;
  animation-duration: 0.5s;
  animation-fill-mode: forwards;
}
.modal-open {
  // Add this to make the modal visible and start the animation when it's opened
  visibility: visible;
  opacity: 1;
  transition: visibility 0s linear 0s, opacity 0.25s 0s;
}

@keyframes modalOpen {
  from {
    transform: translateY(100%);
  }
  to {
    transform: translateY(0);
  }
}

@keyframes modalClose {
  0% {
    transform: scale(1);
    opacity: 1;
  }
  100% {
    transform: scale(0.7);
    opacity: 0;
  }
}
.modal-content {
  margin: 10% auto;
  width: 80%;
  max-width: 800px;
  border-radius: 8px;
  overflow: hidden;
}
.modal-content img {
  width: 100%;
  height: auto;
  display: block;
}
.modal-content button {
  border: none;
  background-color: transparent;
  padding: 1em;
  cursor: pointer;
  font-size: 1.5em;
  position: absolute;
  top: 0;
  right: 0;
}
.modal-closing {
  // Add this to start the closing animation
  animation-name: modalClose;
  animation-duration: 0.25s;
  animation-timing-function: ease-in;
}
.dark-mode {
  background-color: $dark-mode-color;
  color: $light-mode-color;
}

.toggle-switch {
  position: relative;
  float: right;
  display: block;
  width: 160px;
  height: 34px;
  border-radius: 10px;
  margin-right: 15px;
}

.toggle-switch input {
  opacity: 0;
  width: 0;
  height: 0;
  border-radius: 10px;
}

.toggle-switch label {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  width: 150px;
  background-color: #ccc;
  transition: .4s;
  border-radius: 10px;
  text-align: right;
  align-content: center;
  padding-right: 10px;
}

.toggle-switch label:before {
  position: absolute;
  content: "";
  height: 26px;
  width: 26px;
  left: 4px;
  bottom: 4px;
  background-color: white;
  transition: .4s;
  border-radius: 10px;
}

.toggle-switch input:checked + label {
  background-color: #2196F3;
}

.toggle-switch input:checked + label:before {
  transform: translateX(26px);
}

.countryTextFilter{
  display: grid;
  width: 20%;
  margin: 1em;
}
//media query to change the color scheme based on the user's preference
@media (prefers-color-scheme: dark) {
  :root {
    color: #f9f9f9;
    background-color: #242424;
  }
  a:hover {
    color: $secondary-color;
  }
  button {
    background-color: #1a1a1a;
  }
}


@media (prefers-color-scheme: light) {
  :root {
    color: #213547;
    background-color: $light-mode-color;
  }
  a:hover {
    color: #747bff;
  }
  button {
    background-color: $light-mode-color;
  }
}
